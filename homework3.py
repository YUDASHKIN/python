"""
1.1 Реализовать функцию, принимающую два числа (позиционные аргументы)
и выполняющую их деление. Числа запрашивать у пользователя,
предусмотреть обработку ситуации деления на ноль.
"""


def my_func(*args):
    try:
        num_1 = int(input('\nНайдем произведение двух чисел.\nВведите первое число: '))
        num_2 = int(input('Введите второе число: '))
        res = num_1 / num_2
        return f"Результат:  {res:.2f}"
    except ZeroDivisionError:
        return "Ошибочка. На ноль делить нельзя!!!"
    except ValueError:
        return "Ошибочка. Необходимо ввесте число!!!"


print(my_func())

'''
1.2 Реализовать функцию, принимающую несколько параметров,
описывающих данные пользователя: имя, фамилия, год рождения,
город проживания, email, телефон. Функция должна принимать
параметры как именованные аргументы. Реализовать вывод данных
о пользователе одной строкой.
'''


def profile_info(surname, name, year, city, email, phone):
    print("Фамилия: " + surname, "Имя: " + name, "Год рождения: " + year, "Город: " + city, "Почта: " + email,
          "Телефон: " + phone)


profile_info(surname="Огурцов;", name="Валера;", year="1966;", city="Москва;", email="OgValera66@mail.ru;",
             phone="5555555.")


def my_func(**kwargs):
    return kwargs


print(my_func(Фамилия="Огурцов", Имя="Валера", Год_рождения="1966",
              Город="Москва", email="OgValera66@mail.ru",
              Телефон="555-55-55"))

'''
1.3 Реализовать функцию my_func(), которая принимает три
позиционных аргумента, и возвращает сумму наибольших двух аргументов.
'''


def my_func(a, b, c):
    if a >= c <= b:
        return a + b
    elif b < a < c:
        return a + c
    else:
        return b + c


print(f'Сумма наибольших двух аргументов: {my_func(int(input("Введите первый агрумент: ")), int(input("Введите второй агрумент: ")), int(input("Введите третий агрумент: ")))}')

'''
1.4 Программа принимает действительное положительное число x и
целое отрицательное число y. Необходимо выполнить возведение
числа x в степень y. Задание необходимо реализовать в виде функции 
my_func(x, y). При решении задания необходимо обойтись без
встроенной функции возведения числа в степень.
'''


def my_func(x, y):
    return 1 / x ** y


print(my_func(5, -3))

'''
1.5 Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел. Пользователь может
продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел, то вначале 
нужно добавить сумму этих чисел к полученной ранее сумме и после этого
завершить программу.
'''


def my_sum():
    sum_res = 0
    ex = False
    while not ex:
        number = input('\nВычислим сумму чисел. Введите числа через пробел.\nДля выхода можете нажать Q - ').split()
        res = 0
        for el in range(len(number)):
            if number[el] == 'q' or number[el] == 'Q' or number[el] == 'й' or number[el] == 'Й':
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f'Текущая сумма: {sum_res}')
    print(f'Сумма всех введёных чисел: {sum_res}')


my_sum()

'''
1.6 Реализовать функцию int_func(), принимающую слово из маленьких
латинских букв и возвращающую его же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text. Продолжить работу над заданием.
В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. 
Сделать вывод исходной строки, но каждое слово должно начинаться
с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
'''


def int_func(a):
    return a.title()


print(f'{int_func(input("Введите слово: "))}')
