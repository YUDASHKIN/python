"""
1.1 Реализовать скрипт, в котором должна быть предусмотрена
функция расчета заработной платы сотрудника. В расчете
необходимо использовать формулу:
(выработка в часах*ставка в час) + премия.
Для выполнения расчета для конкретных значений необходимо
запускать скрипт с параметрами.
"""

from sys import argv

name, prod_in_hours, rate_hour, premium = argv
try:
    prod_in_hours = int(prod_in_hours)
    rate_hour = int(rate_hour)
    premium = int(premium)
    res = prod_in_hours * rate_hour + premium
    print(f'заработная плата сотрудника  {res}')
except ValueError:
    print('Not a number')

"""
1.2
Представлен список чисел. Необходимо вывести элементы
исходного списка, значения которых больше предыдущего элемента.
Подсказка: элементы, удовлетворяющие условию, оформить в виде списка.
Для формирования списка использовать генератор.
Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
Результат: [12, 44, 4, 10, 78, 123].
"""

my_list = [15, 2, 3, 1, 7, 5, 4, 10, 1, 1, 4, 10, 7, 1, 78]
my_new_list = [el for num, el in enumerate(my_list) if my_list[num - 1] < my_list[num]]
print(f'\nИсходный список: {my_list}')
print(f'Числа, с большим значением предыдущего элемента: {my_new_list}')

'''
1.3. Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21.
Необходимо решить задание в одну строку.
Подсказка: использовать функцию range() и генератор.
'''

print(f'\nСписок чисел, кратных 20 или 21 в диапазоне от 20 до 240.'
      f':\n {[el for el in range(20, 241) if el % 20 == 0 or el % 21 == 0]}\n')

'''
1.4. Представлен список чисел. Определить элементы списка, не имеющие повторений.
Сформировать итоговый массив чисел, соответствующих требованию. 
Элементы вывести в порядке их следования в исходном списке. 
Для выполнения задания обязательно использовать генератор.
Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].
Результат: [23, 1, 3, 10, 4, 11]
'''

my_list2 = [2, 5, 5, 3, 4, 3, 9, 11, 9, 6]
my_new_list = [el for el in my_list2 if my_list.count(el) < 2]
print(f'\nИсходный список: {my_list2}')
print(f'Элементы списка, не имеющих повторений: {my_new_list}')
